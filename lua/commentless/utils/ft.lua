local M = {}

-- The comment syntax table implementation, using common syntaxes,
-- is based on `https://github.com/numToStr/Comment.nvim`.
-- However, it will likely require some tweaking.

---Common commentstring shared b/w multiple languages
local S = {
	cxx_l = "//%s",
	cxx_b = "/*%s*/",
	dbl_hash = "##%s",
	dash = "%-%-%s",
	dash_bracket = "--[[%s]]",
	handlebars = "{{!--%s--}}",
	hash = "#%s",
	hash_bracket = "#[[%s]]",
	haskell_b = "{-%s-}",
	fsharp_b = "(*%s*)",
	html = "<!--%s-->",
	latex = "%%s",
	semicolon = ";%s",
	lisp_l = ";;%s",
	lisp_b = "#|%s|#",
	twig = "{#%s#}",
	vim = '"%s',
	lean_b = "/-%s-/",
	ruby_block = "=begin%s=end",
}

---Lang table that contains linewise commentstrings for multiple filetypes
---@type table<string,string[]>
local L = {
	arduino = { S.cxx_l, S.cxx_b },
	applescript = { S.hash },
	asm = { S.hash },
	astro = { S.html },
	autohotkey = { S.semicolon, S.cxx_b },
	bash = { S.hash },
	beancount = { S.semicolon },
	bib = { S.latex },
	blueprint = { S.cxx_l }, -- Blueprint doesn't have block comments
	c = { S.cxx_l, S.cxx_b },
	cabal = { S.dash },
	cairo = { S.cxx_l },
	cmake = { S.hash, S.hash_bracket },
	conf = { S.hash },
	conkyrc = { S.dash, S.dash_bracket },
	coq = { S.fsharp_b, S.fsharp_b },
	cpp = { S.cxx_l, S.cxx_b },
	cs = { S.cxx_l, S.cxx_b },
	css = { S.cxx_b, S.cxx_b },
	cuda = { S.cxx_l, S.cxx_b },
	cue = { S.cxx_l },
	dart = { S.cxx_l, S.cxx_b },
	dhall = { S.dash, S.haskell_b },
	dnsmasq = { S.hash },
	dosbatch = { "REM%s" },
	dot = { S.cxx_l, S.cxx_b },
	dts = { S.cxx_l, S.cxx_b },
	editorconfig = { S.hash },
	eelixir = { S.html, S.html },
	elixir = { S.hash },
	elm = { S.dash, S.haskell_b },
	elvish = { S.hash },
	faust = { S.cxx_l, S.cxx_b },
	fennel = { S.semicolon },
	fish = { S.hash },
	func = { S.lisp_l },
	fsharp = { S.cxx_l, S.fsharp_b },
	gdb = { S.hash },
	gdscript = { S.hash },
	gdshader = { S.cxx_l, S.cxx_b },
	gitignore = { S.hash },
	gleam = { S.cxx_l },
	glsl = { S.cxx_l, S.cxx_b },
	gnuplot = { S.hash, S.hash_bracket },
	go = { S.cxx_l, S.cxx_b },
	gomod = { S.cxx_l },
	graphql = { S.hash },
	groovy = { S.cxx_l, S.cxx_b },
	handlebars = { S.handlebars, S.handlebars },
	haskell = { S.dash, S.haskell_b },
	haxe = { S.cxx_l, S.cxx_b },
	hcl = { S.hash, S.cxx_b },
	heex = { S.html, S.html },
	html = { S.html, S.html },
	htmldjango = { S.html, S.html },
	hyprlang = { S.hash },
	idris = { S.dash, S.haskell_b },
	idris2 = { S.dash, S.haskell_b },
	ini = { S.hash },
	jai = { S.cxx_l, S.cxx_b },
	java = { S.cxx_l, S.cxx_b },
	javascript = { S.cxx_l, S.cxx_b },
	javascriptreact = { S.cxx_l, S.cxx_b },
	jq = { S.hash },
	jsonc = { S.cxx_l },
	jsonnet = { S.cxx_l, S.cxx_b },
	julia = { S.hash, "#=%s=#" },
	kdl = { S.cxx_l, S.cxx_b },
	kotlin = { S.cxx_l, S.cxx_b },
	lean = { S.dash, S.lean_b },
	lean3 = { S.dash, S.lean_b },
	lidris = { S.dash, S.haskell_b },
	lilypond = { S.latex, "%{%s%}" },
	lisp = { S.lisp_l, S.lisp_b },
	lua = { S.dash, S.dash_bracket },
	metalua = { S.dash, S.dash_bracket },
	luau = { S.dash, S.dash_bracket },
	markdown = { S.html, S.html },
	make = { S.hash },
	mbsyncrc = { S.dbl_hash },
	mermaid = { "%%%s" },
	meson = { S.hash },
	mojo = { S.hash },
	nextflow = { S.cxx_l, S.cxx_b },
	nim = { S.hash, "#[%s]#" },
	nix = { S.hash, S.cxx_b },
	nu = { S.hash },
	objc = { S.cxx_l, S.cxx_b },
	objcpp = { S.cxx_l, S.cxx_b },
	ocaml = { S.fsharp_b, S.fsharp_b },
	odin = { S.cxx_l, S.cxx_b },
	openscad = { S.cxx_l, S.cxx_b },
	plantuml = { "'%s", "/'%s'/" },
	purescript = { S.dash, S.haskell_b },
	puppet = { S.hash },
	python = { S.hash }, -- Python doesn't have block comments
	php = { S.cxx_l, S.cxx_b },
	prisma = { S.cxx_l },
	proto = { S.cxx_l, S.cxx_b },
	quarto = { S.html, S.html },
	r = { S.hash }, -- R doesn't have block comments
	racket = { S.lisp_l, S.lisp_b },
	rasi = { S.cxx_l, S.cxx_b },
	readline = { S.hash },
	reason = { S.cxx_l, S.cxx_b },
	rego = { S.hash },
	remind = { S.hash },
	rescript = { S.cxx_l, S.cxx_b },
	robot = { S.hash }, -- Robotframework doesn't have block comments
	ron = { S.cxx_l, S.cxx_b },
	ruby = { S.hash, S.ruby_block },
	rust = { S.cxx_l, S.cxx_b },
	sbt = { S.cxx_l, S.cxx_b },
	scala = { S.cxx_l, S.cxx_b },
	scss = { S.cxx_b, S.cxx_b },
	scheme = { S.lisp_l, S.lisp_b },
	sh = { S.hash },
	solidity = { S.cxx_l, S.cxx_b },
	supercollider = { S.cxx_l, S.cxx_b },
	sql = { S.dash, S.cxx_b },
	stata = { S.cxx_l, S.cxx_b },
	svelte = { S.html, S.html },
	swift = { S.cxx_l, S.cxx_b },
	sxhkdrc = { S.hash },
	systemverilog = { S.cxx_l, S.cxx_b },
	tablegen = { S.cxx_l, S.cxx_b },
	teal = { S.dash, S.dash_bracket },
	terraform = { S.hash, S.cxx_b },
	tex = { S.latex },
	template = { S.dbl_hash },
	tidal = { S.dash, S.haskell_b },
	tmux = { S.hash },
	toml = { S.hash },
	twig = { S.twig, S.twig },
	typescript = { S.cxx_l, S.cxx_b },
	typescriptreact = { S.cxx_l, S.cxx_b },
	typst = { S.cxx_l, S.cxx_b },
	v = { S.cxx_l, S.cxx_b },
	vala = { S.cxx_l, S.cxx_b },
	verilog = { S.cxx_l },
	vhdl = { S.dash },
	vim = { S.vim },
	vifm = { S.vim },
	vue = { S.html, S.html },
	wgsl = { S.cxx_l, S.cxx_b },
	xdefaults = { "!%s" },
	xml = { S.html, S.html },
	xonsh = { S.hash }, -- Xonsh doesn't have block comments
	yaml = { S.hash },
	yuck = { S.lisp_l },
	zig = { S.cxx_l }, -- Zig doesn't have block comments
}

function M.get_comment_syntax()
	-- FIX: Doesn't work as expected when the comment syntax includes
	-- special expression characters, such as `--`, which should be escaped using `%`.
	return "^%s*" .. L[vim.bo.filetype][1] .. "*"
end

return M
